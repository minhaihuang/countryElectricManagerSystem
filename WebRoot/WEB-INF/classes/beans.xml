<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		                    http://www.springframework.org/schema/context 
		                    http://www.springframework.org/schema/context/spring-context-3.0.xsd
		                    http://www.springframework.org/schema/tx 
		                    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		                    http://www.springframework.org/schema/aop 
		                    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	
	
	<bean id="elecText" class="com.hhm.elec.domain.ElecText">
		<property name="textName" value="springText"></property>
	</bean>
	
	<!-- 配置c3p0数据库连接池，在这里用了数据库连接池之后，那么hibernate.cfg.xml将不再需要与数据库进行关联 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/countryElectric?useUnicode=true&amp;characterEncoding=utf8"></property>
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="user" value="root"></property>
		<property name="password" value="3113007968"></property>
		
		<property name="initialPoolSize" value="5"></property>
		<property name="minPoolSize" value="3"></property>
		<property name="maxPoolSize" value="30"></property>
	</bean>
	
	<!-- 配置spring的SessionFactory，是spring专门用来整合hibernate的类 ，而不是hibernate的SessionFactory-->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="configLocation" value="classpath:/hibernate.cfg.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 配置事务管理器，不需要再在事务管理器中再声明dataSource，因为sessionFactory中已经有了-->
	<bean id="hibernateTransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 配置声明式事务管理 -->
	<tx:advice id="txAdvice" transaction-manager="hibernateTransactionManager">
		<tx:attributes>
			<tx:method name="add*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
			<tx:method name="insert*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
			<tx:method name="delete*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
			<tx:method name="update*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
			<tx:method name="get*" isolation="DEFAULT" propagation="REQUIRED" read-only="true"/>
			<tx:method name="find*" isolation="DEFAULT" propagation="REQUIRED" read-only="true"/>
			<tx:method name="list*" isolation="DEFAULT" propagation="REQUIRED" read-only="true"/>
			<tx:method name="fileUpload*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
			<tx:method name="approve*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
			<tx:method name="*" isolation="DEFAULT" propagation="REQUIRED" read-only="true"/>
			
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置切入点 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.hhm.elec.service.*.*(..))" id="transActionPointCut"/>
		<!-- 置入点与事务管理管理 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transActionPointCut"/>
	</aop:config>
	
	<!-- 配置hibernateTemplate模板 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 引入各种bean的配置文件 -->
	<import resource="config/beans-dao.xml"/>
	<import resource="config/beans-service.xml"/>
	<import resource="config/beans-action.xml"/>
	
	
	
	 <!-- 整合jBPM -->
	 <bean id="springHelper" class="org.jbpm.pvm.internal.processengine.SpringHelper">
		<property name="jbpmCfg"  value="jbpm.cfg.xml"></property>
	</bean>
	<bean id="processEngine"  factory-bean="springHelper" factory-method="createProcessEngine"></bean>
</beans>